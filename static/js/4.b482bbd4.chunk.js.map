{"version":3,"sources":["utils/callHelpers.ts","utils/formatBalance.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/ModalActions/ModalActions.tsx","components/UnlockButton.tsx","views/Farms/components/DepositModal.tsx","hooks/useBlock.ts","hooks/useApprove.ts","hooks/useExitBoardroom.ts","components/LaunchCountdown/LaunchCountdown.tsx","components/LaunchCountdown/index.ts"],"names":["buyBonds","contract","amount","cashStat","account","a","target","getTreasury","amountBig","BigNumber","times","pow","toString","priceBig","methods","send","from","on","tx","transactionHash","redeemBonds","approve","lpContract","masterChefContract","options","address","ethers","constants","MaxUint256","stake","pid","deposit","restake","stakeReward","unstake","withdraw","harvest","unstakeBoardroom","stakeBoardroom","getDisplayBalance","balance","decimals","fractionDigits","number","getBalance","toFixed","getBalanceNumber","displayBalance","dividedBy","toNumber","getBalanceBig","getFullDisplayBalance","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","StyledInputWrapper","styled","div","props","theme","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","startAdornment","rest","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","value","depositFeeBP","TranslateString","toLocaleString","size","onClick","placeholder","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","map","child","i","Spacer","UnlockButton","useWallet","connect","reset","onPresentConnectModal","useWalletModal","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","useCallback","e","currentTarget","handleSelectMax","title","variant","disabled","useBlock","BlockContext","useAllowance","isApproved","setIsApproved","block","useEffect","getAllowance","then","x","allowance","isGreaterThan","useApproveBoardroom","useBoardroom","share","useToken","QuoteToken","SSO","onApprove","useApproveTreasury","token","useTreasury","tokenAddress","useApprove","type","dispatch","useDispatch","useMasterchef","fetchFarmUserDataAsync","oneUnit","useCashPriceInEstimatedTWAP","stat","setStat","slowRefresh","useRefresh","getDollarPrice","call","useTreasuryAllocationTimes","prevAllocation","Date","nextAllocation","nextEpochLength","time","setTime","calls","name","params","multicall","treasury","nextEpochPoint","lastEpochTimestamp","multipliedBy","fetchAllocations","useBondStats","setData","getBurnableDollarLeft","getRedeemableBonds","useExitBoardroom","onRedeem","exit","txHash","StyledCard","card","StyledCountdownTitle","p","secondary","StyledCountdown","LaunchCountdown","deadline","date","renderer","countdownProps","days","hours","minutes","seconds","h","String","m","s","padStart"],"mappings":"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","file":"static/js/4.b482bbd4.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { getTreasury } from './addressHelpers'\r\n\r\nexport const buyBonds = async (contract, amount, cashStat, account) => {\r\n  const target = getTreasury()\r\n\r\n  const amountBig = new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()\r\n  const priceBig = new BigNumber(cashStat).times(new BigNumber(10).pow(18)).toString()\r\n  return contract.methods\r\n    .buyBonds(target, amountBig, priceBig)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const redeemBonds = async (contract, amount, cashStat, account) => {\r\n  const target = getTreasury()\r\n\r\n  const amountBig = new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()\r\n  const priceBig = new BigNumber(cashStat).times(new BigNumber(10).pow(18)).toString()\r\n  return contract.methods\r\n    .redeemBonds(target, amountBig, priceBig)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) =>\r\n  lpContract.methods.approve(masterChefContract.options.address, ethers.constants.MaxUint256).send({ from: account })\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\nexport const restake = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .stakeReward(pid)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstakeBoardroom = async (contract, amount, account) => {\r\n  return contract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const stakeBoardroom = async (contract, amount, account) => {\r\n  return contract.methods\r\n    .stake(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const swapDollar = async (contract, amount, account) => {\r\n  return contract.methods\r\n    .swapDollar(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import BigNumber from 'bignumber.js'\n\nexport const getDisplayBalance = (balance: BigNumber, decimals = 18, fractionDigits = 3) => {\n  const number = getBalance(balance, decimals - fractionDigits);\n  return (number / 10 ** fractionDigits).toFixed(fractionDigits);\n};\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getBalanceBig = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance\n}\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n\nexport function getBalance(balance: BigNumber, decimals = 18) : number {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toNumber()\n}\n\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange?: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value?: string\n  min?: number | string\n  max?: number | string\n  type?: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, startAdornment, ...rest }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput onChange={onChange} {...rest} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from 'uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {\n        depositFeeBP > 0 ?\n          <StyledMaxText>\n            Deposit Fee: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\n          </StyledMaxText>\n          :\n          null\n      }\n\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport { Button, useWalletModal } from 'uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  depositFeeBP?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', depositFeeBP = 0 }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Deposit ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        depositFeeBP={depositFeeBP}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          Cancel\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? 'Pending Confirmation' : 'Confirm'}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useDispatch } from 'react-redux'\nimport { FarmType, QuoteToken } from 'config/constants/types'\nimport { approve } from 'utils/callHelpers'\nimport BigNumber from 'bignumber.js'\nimport { getAllowance } from 'utils/erc20'\nimport { fetchFarmUserDataAsync } from '../state/farms'\nimport { useBoardroom, useMasterchef, useToken, useTreasury } from './useContract'\nimport useBlock from './useBlock'\n\nconst useApprove = (type: FarmType, lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\nexport const useAllowance = (lpContract: Contract, contract: Contract) => {\n  const [isApproved, setIsApproved] = useState(false)\n  const { account }: { account: string } = useWallet()\n  const block = useBlock()\n\n  useEffect(() => {\n    if (isApproved) return\n    getAllowance(lpContract, contract, account).then((x) => {\n      if (!account) return\n      const allowance = new BigNumber(x)\n      setIsApproved(allowance && allowance.isGreaterThan(0))\n    })\n  }, [account, contract, lpContract, block, isApproved])\n\n  return isApproved\n}\n\nexport const useApproveBoardroom = () => {\n  const { account }: { account: string } = useWallet()\n  const contract = useBoardroom()\n  const share = useToken(QuoteToken.SSO)\n  const isApproved = useAllowance(share, contract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(share, contract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, share, contract])\n\n  return { onApprove: handleApprove, isApproved }\n}\n\nexport const useApproveTreasury = (token: QuoteToken) => {\n  const { account }: { account: string } = useWallet()\n  const contract = useTreasury()\n  const tokenAddress = useToken(token)\n  const isApproved = useAllowance(tokenAddress, contract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(tokenAddress, contract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, tokenAddress, contract])\n\n  return { onApprove: handleApprove, isApproved }\n}\n\nexport default useApprove\n","import { useCallback, useEffect, useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { TreasuryAllocationTime } from 'utils'\r\nimport { getTreasury } from 'utils/addressHelpers'\r\nimport multicall from 'utils/multicall'\r\nimport treasury from 'config/abi/treasury.json'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useBoardroom, useTreasury } from './useContract'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useExitBoardroom = () => {\r\n  const { account } = useWallet()\r\n  const contract = useBoardroom()\r\n\r\n  const handleExit = useCallback(async () => {\r\n    const txHash = await contract.methods.exit().send({ from: account })\r\n    return txHash\r\n  }, [account, contract])\r\n\r\n  return { onRedeem: handleExit }\r\n}\r\n\r\nconst oneUnit = new BigNumber(10).pow(18)\r\n\r\nexport const useCashPriceInEstimatedTWAP = () => {\r\n  const [stat, setStat] = useState(new BigNumber(10).div(oneUnit))\r\n  const contract = useTreasury()\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    contract.methods\r\n      .getDollarPrice()\r\n      .call()\r\n      .then((x) => setStat(new BigNumber(x).div(oneUnit)))\r\n  }, [contract, slowRefresh])\r\n\r\n  return stat\r\n}\r\n\r\nexport const useTreasuryAllocationTimes = () => {\r\n  const [time, setTime] = useState<TreasuryAllocationTime>({\r\n    prevAllocation: new Date(),\r\n    nextAllocation: new Date(),\r\n    nextEpochLength: 0,\r\n  })\r\n  const contract = getTreasury()\r\n\r\n  useEffect(() => {\r\n    const fetchAllocations = async () => {\r\n      const calls = [\r\n        {\r\n          address: contract,\r\n          name: 'nextEpochPoint',\r\n          params: [],\r\n        },\r\n        {\r\n          address: contract,\r\n          name: 'lastEpochTime',\r\n          params: [],\r\n        },\r\n        {\r\n          address: contract,\r\n          name: 'nextEpochLength',\r\n          params: [],\r\n        },\r\n      ]\r\n\r\n      const [nextEpochPoint, lastEpochTimestamp, nextEpochLength] = await multicall((treasury as unknown) as any, calls)\r\n      setTime({\r\n        nextAllocation: new Date(new BigNumber(nextEpochPoint).multipliedBy(1000).toNumber()),\r\n        prevAllocation: new Date(new BigNumber(lastEpochTimestamp).multipliedBy(1000).toNumber()),\r\n        nextEpochLength: new BigNumber(nextEpochLength).toNumber(),\r\n      })\r\n    }\r\n\r\n    if (contract) fetchAllocations()\r\n  }, [contract])\r\n  return time\r\n}\r\n\r\nexport const useBondStats = () => {\r\n  const [data, setData] = useState([new BigNumber(0), new BigNumber(0)])\r\n  const contract = getTreasury()\r\n\r\n  useEffect(() => {\r\n    const fetchAllocations = async () => {\r\n      const calls = [\r\n        {\r\n          address: contract,\r\n          name: 'getBurnableDollarLeft',\r\n          params: [],\r\n        },\r\n        {\r\n          address: contract,\r\n          name: 'getRedeemableBonds',\r\n          params: [],\r\n        },\r\n      ]\r\n\r\n      const [getBurnableDollarLeft, getRedeemableBonds] = await multicall((treasury as unknown) as any, calls)\r\n      setData([new BigNumber(getBurnableDollarLeft).div(oneUnit), new BigNumber(getRedeemableBonds).div(oneUnit)])\r\n    }\r\n\r\n    if (contract) fetchAllocations()\r\n  }, [contract])\r\n  return data\r\n}\r\n\r\nexport default useExitBoardroom\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Countdown, { CountdownRenderProps } from 'react-countdown'\r\n\r\ninterface LaunchCountdownProps {\r\n  deadline: Date\r\n}\r\n\r\nconst LaunchCountdown: React.FC<LaunchCountdownProps> = ({ deadline }) => {\r\n  const countdownRenderer = (countdownProps: CountdownRenderProps) => {\r\n    const { days, hours, minutes, seconds } = countdownProps\r\n    const h = String(days * 24 + hours)\r\n    const m = String(minutes)\r\n    const s = String(seconds)\r\n    return (\r\n      <StyledCountdown>\r\n        {h.padStart(2, '0')}:{m.padStart(2, '0')}:{s.padStart(2, '0')}\r\n      </StyledCountdown>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <StyledCard>\r\n      <StyledCountdownTitle>Starting In...</StyledCountdownTitle>\r\n      <Countdown date={deadline} renderer={countdownRenderer} />\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nconst StyledCard = styled.div`\r\n  width: 400px;\r\n  background-color: ${(props) => props.theme.colors.card};\r\n  border: 1px solid ${(props) => props.theme.colors.primary};\r\n  box-sizing: border-box;\r\n  padding: 36px;\r\n  border-radius: 16px;\r\n  box-shadow: 0px 3px 30px #d5d5d5a0;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCountdownTitle = styled.p`\r\n  font-size: 20px;\r\n  color: ${(props) => props.theme.colors.secondary};\r\n  margin: 0;\r\n`\r\n\r\nconst StyledCountdown = styled.p`\r\n  font-size: 40px;\r\n  color: #d8325e;\r\n  padding: 20px;\r\n`\r\n\r\nexport default LaunchCountdown\r\n","import LaunchCountdown from './LaunchCountdown';\r\n\r\nexport default LaunchCountdown;\r\n"],"sourceRoot":""}