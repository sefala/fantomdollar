{"version":3,"sources":["utils/callHelpers.ts","utils/formatBalance.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","components/layout/Flex.tsx","components/Spacer/Spacer.tsx","utils/erc20.ts","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/ModalActions/ModalActions.tsx","components/UnlockButton.tsx","views/Farms/components/DepositModal.tsx","hooks/useBlock.ts","hooks/useApprove.ts","hooks/useStake.ts","views/Farms/components/WithdrawModal.tsx","config/index.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","hooks/useUnstake.ts","views/Farms/components/FarmCard/StakeAction.tsx","hooks/useHarvest.ts","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/Farms.tsx"],"names":["buyBonds","contract","amount","cashStat","account","a","target","getTreasury","amountBig","BigNumber","times","pow","toString","priceBig","methods","send","from","on","tx","transactionHash","redeemBonds","approve","lpContract","masterChefContract","options","address","ethers","constants","MaxUint256","stake","pid","deposit","restake","stakeReward","unstake","withdraw","harvest","unstakeBoardroom","stakeBoardroom","getDisplayBalance","balance","decimals","fractionDigits","number","getBalance","toFixed","getBalanceNumber","displayBalance","dividedBy","toNumber","getBalanceBig","getFullDisplayBalance","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","FlexLayout","styled","div","StyledSpacer","props","size","Spacer","s","spacing","ThemeContext","getContract","provider","Web3","eth","Contract","erc20","getAllowance","allowance","call","getTokenBalance","tokenAddress","userAddress","balanceOf","StyledInputWrapper","theme","colors","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","startAdornment","rest","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","value","depositFeeBP","TranslateString","toLocaleString","onClick","placeholder","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","map","child","i","UnlockButton","useWallet","connect","reset","onPresentConnectModal","useWalletModal","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","useCallback","e","currentTarget","handleSelectMax","title","variant","disabled","useBlock","BlockContext","useAllowance","isApproved","setIsApproved","block","useEffect","then","x","isGreaterThan","useApproveBoardroom","useBoardroom","share","useToken","QuoteToken","SSO","onApprove","useApproveTreasury","token","useTreasury","useApprove","type","dispatch","useDispatch","useMasterchef","fetchFarmUserDataAsync","useStake","contractPid","onStake","useStakeToBoardroom","useWithdrawFromBoardroom","onWithdraw","WithdrawModal","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","Wrapper","ExpandableSectionButton","expanded","aria-label","role","color","bold","defaultProps","StyledLinkExternal","LinkExternal","getSwapUrl","swap","Swap","SPOOKY","getUrls","tokenSymbol","quoteTokenSymbol","isTokenOnly","firstPart","WFTM","contracts","CHAIN_ID","secondPart","getFullSwapUrl","lpAddresses","DetailsSection","farm","liquidityUrlPathParts","bscScanAddress","userData","total","totalValue","totalValueFormated","Number","undefined","maximumFractionDigits","stakedBalance","totalBalance","liquidity","multipliedBy","justifyContent","SPIRIT","href","lpSymbol","external","Flex","MultiplierTag","Tag","CardHeading","lpLabel","multiplier","alignItems","mb","useUnstake","onUnstake","txHash","console","info","IconButtonWrapper","StakeAction","tokenBalance","rawStakedBalance","useModal","onPresentDeposit","onPresentWithdraw","mr","FarmType","SHARE","useHarvest","onReward","BalanceAndCompound","HarvestAction","earnings","rawEarningsBalance","rawEarningsBalanceNumber","Action","Divider","borderColor","CardActions","ethereum","earnToken","requestedApproval","setRequestedApproval","useFarmUser","lpAddress","process","lpName","toUpperCase","handleApprove","error","startTime","poolActive","Date","now","textTransform","fontSize","pr","date","renderer","countdownProps","days","hours","minutes","seconds","paddedSeconds","paddedMinutes","paddedHours","paddedDays","mt","fullWidth","RainbowLight","keyframes","StyledCardAccent","FCard","card","background","ExpandingWrapper","FarmCard","isSSO","showExpandableSection","setShowExpandableSection","farmImage","toLowerCase","earnLabel","SDO","farmAPY","apy","style","display","isNaN","minimumFractionDigits","height","width","CardActionsContainer","Farms","path","useRouteMatch","farmsLP","useFarms","prices","usePrices","fastRefresh","useRefresh","activeFarms","filter","DOLLAR","farmsList","farmsToDisplay","cakeRewardPerYear","tokenPerBLock","poolWeight","baseToken","calculateTotal","comparedTo","Page","as","textAlign","exact"],"mappings":"ufAIaA,EAAQ,uCAAG,WAAOC,EAAUC,EAAQC,EAAUC,GAAnC,mBAAAC,EAAA,6DAChBC,EAASC,cAETC,EAAY,IAAIC,IAAUP,GAAQQ,MAAM,IAAID,IAAU,IAAIE,IAAI,KAAKC,WACnEC,EAAW,IAAIJ,IAAUN,GAAUO,MAAM,IAAID,IAAU,IAAIE,IAAI,KAAKC,WAJpD,kBAKfX,EAASa,QACbd,SAASM,EAAQE,EAAWK,GAC5BE,KAAK,CAAEC,KAAMZ,IACba,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBATQ,2CAAH,4DAaRC,EAAW,uCAAG,WAAOnB,EAAUC,EAAQC,EAAUC,GAAnC,mBAAAC,EAAA,6DACnBC,EAASC,cAETC,EAAY,IAAIC,IAAUP,GAAQQ,MAAM,IAAID,IAAU,IAAIE,IAAI,KAAKC,WACnEC,EAAW,IAAIJ,IAAUN,GAAUO,MAAM,IAAID,IAAU,IAAIE,IAAI,KAAKC,WAJjD,kBAKlBX,EAASa,QACbM,YAAYd,EAAQE,EAAWK,GAC/BE,KAAK,CAAEC,KAAMZ,IACba,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBATW,2CAAH,4DAaXE,EAAO,uCAAG,WAAOC,EAAYC,EAAoBnB,GAAvC,SAAAC,EAAA,+EACrBiB,EAAWR,QAAQO,QAAQE,EAAmBC,QAAQC,QAASC,SAAOC,UAAUC,YAAYb,KAAK,CAAEC,KAAMZ,KADpF,2CAAH,0DAGPyB,EAAK,uCAAG,WAAON,EAAoBO,EAAK5B,EAAQE,GAAxC,SAAAC,EAAA,+EACZkB,EAAmBT,QACvBiB,QAAQD,EAAK,IAAIrB,IAAUP,GAAQQ,MAAM,IAAID,IAAU,IAAIE,IAAI,KAAKC,YACpEG,KAAK,CAAEC,KAAMZ,IACba,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALK,2CAAH,4DAQLa,EAAO,uCAAG,WAAOT,EAAoBO,EAAK1B,GAAhC,SAAAC,EAAA,+EACdkB,EAAmBT,QACvBmB,YAAYH,GACZf,KAAK,CAAEC,KAAMZ,IACba,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALO,2CAAH,0DASPe,EAAO,uCAAG,WAAOX,EAAoBO,EAAK5B,EAAQE,GAAxC,SAAAC,EAAA,+EACdkB,EAAmBT,QACvBqB,SAASL,EAAK,IAAIrB,IAAUP,GAAQQ,MAAM,IAAID,IAAU,IAAIE,IAAI,KAAKC,YACrEG,KAAK,CAAEC,KAAMZ,IACba,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALO,2CAAH,4DASPiB,EAAO,uCAAG,WAAOb,EAAoBO,EAAK1B,GAAhC,SAAAC,EAAA,+EACdkB,EAAmBT,QACvBiB,QAAQD,EAAK,KACbf,KAAK,CAAEC,KAAMZ,IACba,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALO,2CAAH,0DASPkB,EAAgB,uCAAG,WAAOpC,EAAUC,EAAQE,GAAzB,SAAAC,EAAA,+EACvBJ,EAASa,QACbqB,SAAS,IAAI1B,IAAUP,GAAQQ,MAAM,IAAID,IAAU,IAAIE,IAAI,KAAKC,YAChEG,KAAK,CAAEC,KAAMZ,IACba,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALgB,2CAAH,0DAShBmB,EAAc,uCAAG,WAAOrC,EAAUC,EAAQE,GAAzB,SAAAC,EAAA,+EACrBJ,EAASa,QACbe,MAAM,IAAIpB,IAAUP,GAAQQ,MAAM,IAAID,IAAU,IAAIE,IAAI,KAAKC,YAC7DG,KAAK,CAAEC,KAAMZ,IACba,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALc,2CAAH,2D,iCC7E3B,6JAEaoB,EAAoB,SAACC,GAA2D,IAAvCC,EAAsC,uDAA3B,GAAIC,EAAuB,uDAAN,EAC9EC,EAASC,EAAWJ,EAASC,EAAWC,GAC9C,OAAQC,EAAM,SAAG,GAAMD,IAAgBG,QAAQH,IAGpCI,EAAmB,SAACN,GAAuC,IAAnBC,EAAkB,uDAAP,GACxDM,EAAiB,IAAItC,IAAU+B,GAASQ,UAAU,IAAIvC,IAAU,IAAIE,IAAI8B,IAC9E,OAAOM,EAAeE,YAGXC,EAAgB,SAACV,GAAuC,IAAnBC,EAAkB,uDAAP,GACrDM,EAAiB,IAAItC,IAAU+B,GAASQ,UAAU,IAAIvC,IAAU,IAAIE,IAAI8B,IAC9E,OAAOM,GAEII,EAAwB,SAACX,GAAuC,IAAnBC,EAAkB,uDAAP,GACnE,OAAOD,EAAQQ,UAAU,IAAIvC,IAAU,IAAIE,IAAI8B,IAAWI,WAGrD,SAASD,EAAWJ,GAA6C,IAAzBC,EAAwB,uDAAb,GACxD,OAAOD,EAAQQ,UAAU,IAAIvC,IAAU,IAAIE,IAAI8B,IAAWQ,a,qDClBtDG,EAAgB,UASTC,EAAiB,SAACC,EAA0BC,EAAuBC,GAC9E,IAAMC,EAAmBH,EAAaI,MAAK,SAACC,GAC1C,OAAOA,EAAYC,KAAKC,WAAaN,KAEvC,GAAIE,EAAkB,CACpB,IAAMK,EAAmBL,EAAiBG,KAAKG,KAE/C,OADyBD,EAAiBE,SAAS,KAb1B,SAACP,EAA0BD,GACtD,IAAMS,EAAkBb,EAAcc,KAAKT,GAAkB,GAEvDU,EAAuBX,EAASY,MAAM,KAAK,GACjD,OAAOX,EAAiBY,QAAQJ,EAAiBE,GAWtCG,CAAqBR,EAAkBN,GAEzCM,EAET,OAAON,GCNMe,IAdC,WAAO,IACbjB,EAAiBkB,qBAAWC,KAA5BnB,aAER,OAAO,SAACC,EAAuBC,GAC7B,MAAwB,UAApBF,EAAa,GACRE,EAELF,EAAaoB,OAAS,EACjBrB,EAAeC,EAAcC,EAAeC,GAE9CA,K,mTCZX,IAAMmB,E,KAAaC,EAAOC,IAAV,KAaDF,O,6MCRf,IAuBMG,EAAeF,IAAOC,IAAV,KACN,SAACE,GAAD,OAAWA,EAAMC,QAClB,SAACD,GAAD,OAAWA,EAAMC,QAGbC,EA5BuB,SAAC,GAAqB,IAGtDC,EAHqD,IAAlBF,YAAkB,MAAX,KAAW,EACjDG,EAAYX,qBAAWY,KAAvBD,QAGR,OAAQH,GACN,IAAK,KACHE,EAAIC,EAAQ,GACZ,MACF,IAAK,KACHD,EAAIC,EAAQ,GACZ,MACF,IAAK,KACL,QACED,EAAIC,EAAQ,GAGhB,OAAO,cAACL,EAAD,CAAcE,KAAME,M,8LCjBhBG,EAAc,SAACC,EAAwB7D,GAGlD,OADiB,IADJ,IAAI8D,IAAKD,GACIE,IAAIC,UAAUC,EAA8BjE,IAI3DkE,EAAY,uCAAG,WAC1BrE,EACAC,EACAnB,GAH0B,eAAAC,EAAA,+EAMQiB,EAAWR,QAAQ8E,UAAUxF,EAASmB,EAAmBC,QAAQC,SAASoE,OANlF,cAMlBD,EANkB,yBAOjBA,GAPiB,yDASjB,KATiB,yDAAH,0DAaZE,EAAe,uCAAG,WAC7BR,EACAS,EACAC,GAH6B,iBAAA3F,EAAA,6DAKvBJ,EAAWoF,EAAYC,EAAUS,GALV,kBAOG9F,EAASa,QAAQmF,UAAUD,GAAaH,OAP3C,cAOrBrD,EAPqB,yBAQpBA,GARoB,yDAUpB,KAVoB,yDAAH,2D,8jBCX5B,IAUM0D,EAAqBtB,IAAOC,IAAV,KAEF,SAACE,GAAD,OAAWA,EAAMoB,MAAMC,OAAOC,SACjC,SAACtB,GAAD,OAAWA,EAAMoB,MAAMG,MAAMC,WAGjC,SAACxB,GAAD,OAAWA,EAAMoB,MAAMhB,QAAQ,MAGxCqB,EAAc5B,IAAOyB,MAAV,KAIN,SAACtB,GAAD,OAAWA,EAAMoB,MAAMC,OAAOK,WAS1BC,EAhCqB,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,aAAcC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,eAAmBC,EAAW,4DAC3F,OACE,eAACZ,EAAD,aACKW,GAAkBA,EACrB,cAACL,EAAD,aAAaI,SAAUA,GAAcE,MAClCH,GAAgBA,M,ilBCLzB,IAoCMI,EAAmBnC,IAAOC,IAAV,KAEhBC,EAAeF,IAAOC,IAAV,KACP,SAACE,GAAD,OAAWA,EAAMoB,MAAMhB,QAAQ,MAGpC6B,EAA8BpC,IAAOC,IAAV,KAK3BoC,EAAgBrC,IAAOC,IAAV,KAER,SAACE,GAAD,OAAWA,EAAMoB,MAAMC,OAAOK,WAQnCS,EAAoBtC,IAAOuC,KAAV,KACZ,SAACpC,GAAD,OAAWA,EAAMoB,MAAMC,OAAOK,WAI1BW,EA9D+B,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,IAAKC,EAA6D,EAA7DA,OAAQV,EAAqD,EAArDA,SAAUW,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,MAA8B,IAAvBC,oBAAuB,MAAR,EAAQ,EAC3GC,EAAkBnD,cACxB,OACE,eAACwC,EAAD,WACE,eAACE,EAAD,WACGI,EAAIM,iBADP,IAC0BL,EAD1B,IACmCI,EAAgB,IAAK,gBAExD,cAAC,EAAD,CACEf,aACE,eAACK,EAAD,WACE,cAACE,EAAD,UAAoBI,IACpB,cAACxC,EAAD,IACA,8BACE,cAAC,SAAD,CAAQE,KAAK,KAAK4C,QAASL,EAA3B,SACGG,EAAgB,IAAK,cAK9Bd,SAAUA,EACViB,YAAY,IACZL,MAAOA,IAGPC,EAAe,EACb,eAACR,EAAD,2BACgB,IAAIxG,IAAU+G,GAAS,GAAG9G,MAAM+G,EAAa,KAAO7G,WADpE,IACiF0G,KAGjF,U,6YCtCV,IAcMQ,EAAqBlD,IAAOC,IAAV,KAEF,SAACE,GAAD,OAAWA,EAAMoB,MAAMC,OAAO2B,eAGvC,SAAChD,GAAD,OAAWA,EAAMoB,MAAMhB,QAAQ,MAGtC6C,EAAoBpD,IAAOC,IAAV,KAKRoD,EA3BgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1BC,EAAIC,IAAMC,SAASC,QAAQJ,GAAUxD,OAC3C,OACE,cAACoD,EAAD,UACGM,IAAMC,SAASE,IAAIL,GAAU,SAACM,EAAOC,GAAR,OAC5B,qCACE,cAACT,EAAD,UAAoBQ,IACnBC,EAAIN,EAAI,GAAK,cAAClD,EAAA,EAAD,c,oFCKTyD,IAZM,SAAC3D,GACpB,IAAM2C,EAAkBnD,cADM,EAEHoE,cAAnBC,EAFsB,EAEtBA,QAASC,EAFa,EAEbA,MACTC,EAA0BC,yBAAeH,EAASC,GAAlDC,sBAER,OACE,cAAC,SAAD,yBAAQlB,QAASkB,GAA2B/D,GAA5C,aACG2C,EAAgB,IAAK,sB,wHCmDbsB,IAhDmC,SAAC,GAAqE,IAAnE3B,EAAkE,EAAlEA,IAAK4B,EAA6D,EAA7DA,UAAWC,EAAkD,EAAlDA,UAAkD,IAAvCC,iBAAuC,MAA3B,GAA2B,MAAvB1B,oBAAuB,MAAR,EAAQ,IAC/F2B,mBAAS,IADsF,mBAC9GC,EAD8G,KACzGC,EADyG,OAEnFF,oBAAS,GAF0E,mBAE9GG,EAF8G,KAEnGC,EAFmG,KAG/GC,EAAcC,mBAAQ,WAC1B,OAAOvG,YAAsBkE,KAC5B,CAACA,IAEEsC,EAAeC,uBACnB,SAACC,GACCP,EAAOO,EAAEC,cAActC,SAEzB,CAAC8B,IAGGS,EAAkBH,uBAAY,WAClCN,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,eAAC,QAAD,CAAOU,MAAK,kBAAab,EAAb,WAAiCD,UAAWA,EAAxD,UACE,cAAC,IAAD,CACE1B,MAAO6B,EACP9B,YAAawC,EACbnD,SAAU+C,EACVtC,IAAKoC,EACLnC,OAAQ6B,EACR1B,aAAcA,IAEhB,eAAC,IAAD,WACE,cAAC,SAAD,CAAQwC,QAAQ,YAAYrC,QAASsB,EAArC,oBAGA,cAAC,SAAD,CACEgB,SAAUX,EACV3B,QAAO,sBAAE,sBAAAvH,EAAA,6DACPmJ,GAAa,GADN,SAEDP,EAAUI,GAFT,OAGPG,GAAa,GACbN,IAJO,2CAFX,SASGK,EAAY,uBAAyB,oB,sOChDjCY,EALE,WAEf,OADsB3F,qBAAW4F,MC0BtBC,EAAe,SAAC/I,EAAsBrB,GAAwB,IAAD,EACpCmJ,oBAAS,GAD2B,mBACjEkB,EADiE,KACrDC,EADqD,KAEhEnK,EAAiCuI,cAAjCvI,QACFoK,EAAQL,IAWd,OATAM,qBAAU,WACJH,GACJ3E,YAAarE,EAAYrB,EAAUG,GAASsK,MAAK,SAACC,GAChD,GAAKvK,EAAL,CACA,IAAMwF,EAAY,IAAInF,IAAUkK,GAChCJ,EAAc3E,GAAaA,EAAUgF,cAAc,UAEpD,CAACxK,EAASH,EAAUqB,EAAYkJ,EAAOF,IAEnCA,GAGIO,EAAsB,WAAO,IAChCzK,EAAiCuI,cAAjCvI,QACFH,EAAW6K,cACXC,EAAQC,YAASC,IAAWC,KAC5BZ,EAAaD,EAAaU,EAAO9K,GAWvC,MAAO,CAAEkL,UATavB,sBAAW,sBAAC,4BAAAvJ,EAAA,+EAEbgB,YAAQ0J,EAAO9K,EAAUG,GAFZ,cAExBc,EAFwB,yBAGvBA,GAHuB,0DAKvB,GALuB,yDAO/B,CAACd,EAAS2K,EAAO9K,IAEeqK,eAGxBc,EAAqB,SAACC,GAAuB,IAChDjL,EAAiCuI,cAAjCvI,QACFH,EAAWqL,cACXvF,EAAeiF,YAASK,GACxBf,EAAaD,EAAatE,EAAc9F,GAW9C,MAAO,CAAEkL,UATavB,sBAAW,sBAAC,4BAAAvJ,EAAA,+EAEbgB,YAAQ0E,EAAc9F,EAAUG,GAFnB,cAExBc,EAFwB,yBAGvBA,GAHuB,0DAKvB,GALuB,yDAO/B,CAACd,EAAS2F,EAAc9F,IAEQqK,eAGtBiB,IAvEI,SAACC,EAAgBlK,GAClC,IAAMmK,EAAWC,cACTtL,EAAiCuI,cAAjCvI,QACFmB,EAAqBoK,YAAcH,GAYzC,MAAO,CAAEL,UAVavB,sBAAW,sBAAC,4BAAAvJ,EAAA,+EAEbgB,YAAQC,EAAYC,EAAoBnB,GAF3B,cAExBc,EAFwB,OAG9BuK,EAASG,YAAuBxL,IAHF,kBAIvBc,GAJuB,0DAMvB,GANuB,yDAQ/B,CAACd,EAASqL,EAAUnK,EAAYC,O,qNCjBxBsK,EAAW,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,YAAaN,EAAiB,EAAjBA,KAChCC,EAAWC,cACTtL,EAAYuI,cAAZvI,QACFmB,EAAqBoK,YAAcH,GAUzC,MAAO,CAAEO,QARWnC,sBAAW,uCAC7B,WAAO1J,GAAP,SAAAG,EAAA,sEACQwB,YAAMN,EAAoBuK,EAAa5L,EAAQE,GADvD,OAEEqL,EAASG,YAAuBxL,IAFlC,2CAD6B,sDAK7B,CAACA,EAASqL,EAAUlK,EAAoBuK,MAM/BE,EAAsB,WAAO,IAChC5L,EAAYuI,cAAZvI,QACFH,EAAW6K,cASjB,MAAO,CAAEiB,QAPWnC,sBAAW,uCAC7B,WAAO1J,GAAP,SAAAG,EAAA,sEACQiC,YAAerC,EAAUC,EAAQE,GADzC,2CAD6B,sDAI7B,CAACA,EAASH,MAMDgM,EAA2B,WAAO,IACrC7L,EAAYuI,cAAZvI,QACFH,EAAW6K,cASjB,MAAO,CAAEoB,WAPWtC,sBAAW,uCAC7B,WAAO1J,GAAP,SAAAG,EAAA,sEACQgC,YAAiBpC,EAAUC,EAAQE,GAD3C,2CAD6B,sDAI7B,CAACA,EAASH,O,iICiBCkM,IAhDqC,SAAC,GAAmD,IAAjDlD,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,UAAW7B,EAA0B,EAA1BA,IAA0B,IAArB8B,iBAAqB,MAAT,GAAS,IAC/EC,mBAAS,IADsE,mBAC9FC,EAD8F,KACzFC,EADyF,OAEnEF,oBAAS,GAF0D,mBAE9FG,EAF8F,KAEnFC,EAFmF,KAG/F9B,EAAkBnD,cAClBkF,EAAcC,mBAAQ,WAC1B,OAAOvG,YAAsBkE,KAC5B,CAACA,IAEEsC,EAAeC,uBACnB,SAACC,GACCP,EAAOO,EAAEC,cAActC,SAEzB,CAAC8B,IAGGS,EAAkBH,uBAAY,WAClCN,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,eAAC,QAAD,CAAOU,MAAK,mBAAcb,GAAaD,UAAWA,EAAlD,UACE,cAAC,IAAD,CACE3B,YAAawC,EACbnD,SAAU+C,EACVnC,MAAO6B,EACPhC,IAAKoC,EACLnC,OAAQ6B,IAEV,eAAC,IAAD,WACE,cAAC,SAAD,CAAQc,QAAQ,YAAYrC,QAASsB,EAArC,SACGxB,EAAgB,IAAK,YAExB,cAAC,SAAD,CACEwC,SAAUX,EACV3B,QAAO,sBAAE,sBAAAvH,EAAA,6DACPmJ,GAAa,GADN,SAEDP,EAAUI,GAFT,OAGPG,GAAa,GACbN,IAJO,2CAFX,SASGK,EAAY7B,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,qB,qKCtD3FjH,IAAU2L,OAAO,CACfC,eAAgB,IAChBC,eAAgB,KAGY,IAAI7L,IAAU,GAArC,IACM8L,EAAkB,IAAI9L,IAAU,S,mQCC7C,IAAM+L,EAAU5H,IAAOC,IAAV,KAOD,qBAAGsB,MAAkBC,OAAOK,WAIlCgG,EAAkE,SAAC,GAA2B,IAAzB7E,EAAwB,EAAxBA,QAAS8E,EAAe,EAAfA,SAClF,OACE,eAACF,EAAD,CAASG,aAAW,kCAAkCC,KAAK,SAAShF,QAAS,kBAAMA,KAAnF,UACE,cAAC,OAAD,CAAMiF,MAAM,UAAUC,MAAI,EAA1B,SACGJ,EAAW,OAAS,YAEtBA,EAAW,cAAC,gBAAD,IAAoB,cAAC,kBAAD,QAKtCD,EAAwBM,aAAe,CACrCL,UAAU,GAGGD,Q,mXCvBf,IAEMD,EAAU5H,IAAOC,IAAV,KAIPmI,EAAqBpI,YAAOqI,eAAPrI,CAAH,KAGb,qBAAGuB,MAAkBC,OAAOrC,QAQ3B,qBAAGoC,MAAkBC,OAAOK,WAIlCyG,EAAa,SAACC,GAClB,OAAOA,IAASC,IAAKC,OAAS,8BAAgC,sCAY1DC,EAAU,SAACjN,GAOf,MAAO,CAhBc,SAAC,GAA+E,IAA7EkN,EAA4E,EAA5EA,YAAaC,EAA+D,EAA/DA,iBAAkBC,EAA6C,EAA7CA,YAAaN,EAAgC,EAAhCA,KAC9DO,EAAYF,IAAqBvC,IAAW0C,KAAO,MAAQC,IAAUJ,GAAkBK,KAE7F,GAAIJ,EAAa,MAAM,GAAN,OAAUP,EAAWC,GAArB,+BAAiDO,GAElE,IAAMI,EAAaF,IAAUL,GAAaM,KAC1C,MAAM,GAAN,OAAUX,EAAWC,GAArB,eAAiCO,EAAjC,YAA8CI,GAI9BC,CAAe1N,GAERA,EAAEoN,YAAF,oCACUG,IAAUvN,EAAEkN,aAAaM,MADnC,oCAEUxN,EAAE2N,eA4CtBC,EAvC0C,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACrBZ,EAAQY,GADa,mBAC9DC,EAD8D,KACvCC,EADuC,KAE7DC,EAA6CH,EAA7CG,SAAUC,EAAmCJ,EAAnCI,MAAOC,EAA4BL,EAA5BK,WAAYd,EAAgBS,EAAhBT,YAC/Be,EAAqBD,EAAU,WAC7BE,OAAOF,GAAY5G,oBAAe+G,EAAW,CAAEC,sBAAuB,KAC1E,IAEEnM,EAAU,IAAI/B,IAAJ,OAAc4N,QAAd,IAAcA,OAAd,EAAcA,EAAUO,eAAe/J,IAAI,IAAIpE,IAAU,IAAIE,IAAI,KAC3EkO,EAAepB,EAAc,IAAIhN,IAAU6N,GAAS,IAAI7N,IAAU6N,GAAOzJ,IAAI,IAAIpE,IAAU,IAAIE,IAAI,KACnGoK,EAAQvI,EAAQqC,IAAIgK,GACpBC,EAAS,WAAOL,OAAO1D,EAAMgE,aAAaR,IAAa5G,oBAAe+G,EAAW,CAAEC,sBAAuB,KAEhH,OACE,eAAC,EAAD,WACE,eAAC,OAAD,CAAMK,eAAe,gBAArB,UACE,cAAC,OAAD,UAAOd,EAAKf,MAAQC,IAAK6B,SACzB,cAACjC,EAAD,CAAoBkC,KAAMf,EAA1B,SAAkDD,EAAKiB,cAEzD,eAAC,OAAD,CAAMH,eAAe,gBAArB,UACE,cAAC,OAAD,8BACA,cAAC,OAAD,UAAOF,OAET,eAAC,OAAD,CAAME,eAAe,gBAArB,UACE,cAAC,OAAD,0BACA,eAAC,OAAD,WAAOjE,EAAMrK,MAAM,KAAKmC,QAAQ,GAAhC,UAEF,eAAC,OAAD,CAAMmM,eAAe,gBAArB,UACE,cAAC,OAAD,+BACA,cAAC,OAAD,UAAOR,OAET,cAAC,OAAD,CAAMQ,eAAe,aAArB,SACE,cAAC,OAAD,CAAMI,UAAQ,EAACF,KAAMd,EAAgBtB,MAAM,EAA3C,mC,6MC5ER,IAAMN,EAAU5H,YAAOyK,OAAPzK,CAAH,KAMP0K,EAAgB1K,YAAO2K,MAAP3K,CAAH,KAeJ4K,EAXuC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAChE,OACE,eAAC,EAAD,CAASV,eAAe,gBAAgBW,WAAW,SAASC,GAAG,OAA/D,UACI,cAAC,UAAD,CAASA,GAAG,MAAZ,SAAmBH,IACnB,cAAC,OAAD,CAAMT,eAAe,SAArB,SACE,cAACM,EAAD,CAAerF,QAAQ,YAAvB,SAAoCyF,GAAc,c,gGCD7CG,EAjBI,SAAC,GAAiC,IAA/B/D,EAA8B,EAA9BA,YAAaN,EAAiB,EAAjBA,KAC3BC,EAAWC,cACTtL,EAAYuI,cAAZvI,QACFmB,EAAqBoK,YAAcH,GAWzC,MAAO,CAAEsE,UATalG,sBAAW,uCAC/B,WAAO1J,GAAP,eAAAG,EAAA,sEACuB6B,YAAQX,EAAoBuK,EAAa5L,EAAQE,GADxE,OACQ2P,EADR,OAEEtE,EAASG,YAAuBxL,IAChC4P,QAAQC,KAAKF,GAHf,2CAD+B,sDAM/B,CAAC3P,EAASqL,EAAUlK,EAAoBuK,M,sJCD5C,IAAMoE,GAAoBtL,IAAOC,IAAV,MA8CRsL,GAvCqC,SAAC,GAA2C,IAAzCvB,EAAwC,EAAxCA,cAAewB,EAAyB,EAAzBA,aAAclC,EAAW,EAAXA,KAC1EnC,EAAYF,YAASqC,GAArBnC,QACA+D,EAAcD,EAAW3B,GAAzB4B,UAEFO,EAAmBvN,YAAiB8L,GACpC7L,EAAiBsN,EAAiB1I,iBALqD,EAOlE2I,mBACzB,cAACtH,EAAA,EAAD,CAAc3B,IAAK+I,EAAcnH,UAAW8C,EAAS5C,UAAW+E,EAAKiB,SAAU1H,aAAcyG,EAAKzG,gBAD7F8I,EAPsF,sBAUjED,mBAC1B,cAACnE,EAAA,EAAD,CAAe9E,IAAKuH,EAAe3F,UAAW6G,EAAW3G,UAAW+E,EAAKiB,YADpEqB,EAVsF,oBA+B7F,OACE,eAAC,OAAD,CAAMxB,eAAe,gBAAgBW,WAAW,SAAhD,UACE,cAAC,UAAD,CAAS9C,MAA4B,IAArBwD,EAAyB,eAAiB,OAA1D,SAAmEtN,IAlBzC,IAArBsN,EACL,cAAC,SAAD,CAAQzI,QAAS2I,EAAjB,mBAEA,eAACL,GAAD,WACE,cAAC,aAAD,CAAYjG,QAAQ,WAAWrC,QAAS4I,EAAmBC,GAAG,MAA9D,SACE,cAAC,YAAD,CAAW5D,MAAM,cAElBqB,EAAK1C,OAASkF,IAASC,OACtB,cAAC,aAAD,CAAY1G,QAAQ,WAAWrC,QAAS2I,EAAxC,SACE,cAAC,UAAD,CAAS1D,MAAM,qBC3BZ+D,GAdI,SAAC,GAAiC,IAA/B9E,EAA8B,EAA9BA,YAAaN,EAAiB,EAAjBA,KAC3BC,EAAWC,cACTtL,EAAYuI,cAAZvI,QACFmB,EAAqBoK,YAAcH,GAQzC,MAAO,CAAEqF,SANajH,sBAAW,sBAAC,4BAAAvJ,EAAA,sEACX+B,YAAQb,EAAoBuK,EAAa1L,GAD9B,cAC1B2P,EAD0B,OAEhCtE,EAASG,YAAuBxL,IAFA,kBAGzB2P,GAHyB,2CAI/B,CAAC3P,EAASqL,EAAUK,EAAavK,M,iLCJtC,IAAMuP,GAAqBlM,IAAOC,IAAV,MAiCTkM,GA1BuC,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAU9C,EAAW,EAAXA,KAAW,EAC1C9E,oBAAS,GADiC,mBACrEG,EADqE,KAC1DC,EAD0D,KAEpEqH,EAAaD,GAAW1C,GAAxB2C,SAEFI,EAAqB/N,YAAc8N,GACnCE,EAA2BpO,YAAiBkO,GAElD,OACE,eAAC,OAAD,CAAMpB,GAAG,MAAMZ,eAAe,gBAAgBW,WAAW,SAAzD,UACE,cAAC,UAAD,CAAS9C,MAAoC,IAA7BqE,EAAiC,eAAiB,OAAlE,SAA2ED,EAAmBpO,QAAQ,KACtG,cAACiO,GAAD,UACE,cAAC,SAAD,CACE5G,SAAuC,IAA7BgH,GAAkC3H,EAC5C3B,QAAO,sBAAE,sBAAAvH,EAAA,6DACPmJ,GAAa,GADN,SAEDqH,IAFC,OAGPrH,GAAa,GAHN,2CAFX,2B,wPChBR,IAAM2H,GAASvM,IAAOC,IAAV,MAINuM,GAAUxM,IAAOC,IAAV,MACS,qBAAGsB,MAAkBC,OAAOiL,eA0GnCC,GA3FqC,SAAC,GAA4C,IAA1CpD,EAAyC,EAAzCA,KAAMqD,EAAmC,EAAnCA,SAAUnR,EAAyB,EAAzBA,QAASoR,EAAgB,EAAhBA,UAAgB,EAC5CpI,oBAAS,GADmC,mBACvFqI,EADuF,KACpEC,EADoE,OAEjCC,YAAYzD,EAAKpM,KAAtE8D,EAFsF,EAEtFA,UAAWwK,EAF2E,EAE3EA,aAAcxB,EAF6D,EAE7DA,cAAeoC,EAF8C,EAE9CA,SAC1CY,EAAY1D,EAAKF,YACjBjI,EAAe6H,IAAUM,EAAKX,aANrBsE,KAOTC,EAAS5D,EAAKiB,SAAS4C,cACvBzH,EAAalK,GAAWwF,GAAaA,EAAUgF,cAAc,GAE7DtJ,EAAaoI,mBAAQ,kBAAMrE,YAAYkM,EAAsBrD,EAAKT,YAAc1H,EAAe6L,KAAY,CAC/GL,EACAK,EACA7L,EACAmI,EAAKT,cAGCtC,EAAcI,YAAW2C,EAAK1C,KAAMlK,GAApC6J,UAEF6G,EAAgBpI,sBAAW,sBAAC,sBAAAvJ,EAAA,sEAE9BqR,GAAqB,GAFS,SAGxBvG,IAHwB,OAI9BuG,GAAqB,GAJS,gDAM9B1B,QAAQiC,MAAR,MAN8B,yDAQ/B,CAAC9G,IAqCE+G,EAAchE,EAAdgE,UACDA,IAAWA,EAAY,GAC5B,IAAMC,EAAyB,IAAZD,EAAmBE,KAAKC,OAAS,EAEpD,OACE,eAAClB,GAAD,WACE,eAAC,OAAD,WACE,cAAC,OAAD,CAAMrE,MAAI,EAACwF,cAAc,YAAYzF,MAAM,YAAY0F,SAAS,OAAOC,GAAG,MAA1E,SACGhB,IAEH,cAAC,OAAD,CAAM1E,MAAI,EAACwF,cAAc,YAAYzF,MAAM,aAAa0F,SAAS,OAAjE,uBAIF,cAAC,GAAD,CAAevB,SAAUA,EAAU9C,KAAMA,IACzC,eAAC,OAAD,WACE,cAAC,OAAD,CAAMpB,MAAI,EAACwF,cAAc,YAAYzF,MAAM,YAAY0F,SAAS,OAAOC,GAAG,MAA1E,SACGV,IAEH,cAAC,OAAD,CAAMhF,MAAI,EAACwF,cAAc,YAAYzF,MAAM,aAAa0F,SAAS,OAAjE,wBAIAJ,GAAc,cAAC,IAAD,CAAWM,KAAM,IAAIL,KAAiB,IAAZF,GAAmBQ,SA3ChD,SAACC,GAA0C,IAClDC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,MAAOC,EAAqBH,EAArBG,QAASC,EAAYJ,EAAZI,QACxBC,EAAgBD,EAAU,GAAV,WAAmBA,GAAYA,EAC/CE,EAAgBH,EAAU,GAAV,WAAmBA,GAAYA,EAC/CI,EAAcL,EAAQ,GAAR,WAAiBA,GAAUA,EACzCM,EAAaP,EAAO,EAAP,UAAcA,EAAd,cAAiC,GAEpD,OACE,qCACE,cAACxB,GAAD,IACA,eAAC,OAAD,CAAMoB,GAAG,MAAT,UACGtE,EAAKiB,SADR,iBACgCgE,EAC7BD,EAFH,IAEiBD,EAFjB,IAEiCD,KAEjC,cAAC,OAAD,CAAMR,GAAG,MAAT,mEACA,cAACpB,GAAD,UA6BAhR,EA1DGkK,EACL,cAAC,GAAD,CAAasE,cAAeA,EAAewB,aAAcA,EAAclC,KAAMA,IAE7EA,EAAK1C,OAASkF,IAASC,OACrB,qCACE,cAAC,SAAD,CAAQyC,GAAG,MAAMC,WAAS,EAACnJ,SAAUuH,EAAmB7J,QAASoK,EAAjE,8BAGA,cAACZ,GAAD,OAkDQ,cAAC1I,EAAA,EAAD,CAAc0K,GAAG,MAAMC,WAAS,Q,g4CC7GlD,IAAMC,GAAeC,YAAH,MAYZC,GAAmB5O,IAAOC,IAAV,KAgBPyO,IAWTG,GAAQ7O,IAAOC,IAAV,MAEK,SAACE,GAAD,OAAWA,EAAMoB,MAAMuN,KAAKC,cAYtCC,GAAmBhP,IAAOC,IAAV,MACV,SAACE,GAAD,OAAYA,EAAM2H,SAAW,OAAS,SAuEnCmH,GA5D2B,SAAC,GAAwC,IAAtC3F,EAAqC,EAArCA,KAAMqD,EAA+B,EAA/BA,SAAUnR,EAAqB,EAArBA,QAAS0T,EAAY,EAAZA,MAAY,EACtB1K,oBAAS,GADa,mBACzE2K,EADyE,KAClDC,EADkD,KAG1EC,EAAY/F,EAAKT,YACnBS,EAAKX,YAAY2G,cADH,UAEXhG,EAAKX,YAAY2G,cAFN,YAEuBhG,EAAKV,iBAAiB0G,eAEzDC,EAAYL,EAAQ7I,IAAWC,IAAMD,IAAWmJ,IAEhDC,EAAUnG,EAAKoG,KAAOpG,EAAKoG,IAAI5T,MAAM,IAAID,IAAU,MAAMwC,WAE/D,OACE,eAACwQ,GAAD,WACGvF,EAAKX,cAAgB4G,GAAa,cAACX,GAAD,IACnC,cAAC,EAAD,CACE/D,QAASvB,EAAKiB,SACdO,WAAYxB,EAAKwB,WACjBuE,UAAWA,EACX1G,YAAaW,EAAKX,cAEpB,eAAC,OAAD,CAAMyB,eAAe,gBAAgBW,WAAW,SAAhD,UACE,cAAC,OAAD,mBACA,cAAC,OAAD,CAAM7C,MAAI,EAACyH,MAAO,CAAEC,QAAS,OAAQ7E,WAAY,UAAjD,SACGzB,EAAKoG,MAAQ7F,OAAOgG,MAAMJ,GACzB,qCACGA,EAAQ1M,oBAAe+G,EAAW,CACjCgG,sBAAuB,EACvB/F,sBAAuB,IAH3B,OAQA,cAAC,WAAD,CAAUgG,OAAQ,GAAIC,MAAO,UAInC,eAAC,OAAD,CAAM5F,eAAe,gBAArB,UACE,cAAC,OAAD,oBACA,cAAC,OAAD,CAAMlC,MAAI,EAAV,SAAYqH,OAEbjG,EAAK1C,OAASkF,IAASC,OACtB,eAAC,OAAD,CAAM3B,eAAe,gBAArB,UACE,cAAC,OAAD,CAAMuF,MAAO,CAAEhC,SAAU,QAAzB,0BACA,cAAC,OAAD,CAAMzF,MAAI,EAACyH,MAAO,CAAEhC,SAAU,QAA9B,SACGrE,EAAKzG,aAAL,UAAuByG,EAAKzG,aAAe,IAA3C,KAAoD,cAAC,WAAD,CAAUkN,OAAQ,GAAIC,MAAO,UAIxF,cAACC,GAAD,CAAsB3G,KAAMA,EAAMqD,SAAUA,EAAUnR,QAASA,EAASoR,UAAW2C,IACnF,cAAC,EAAD,CACEvM,QAAS,kBAAMoM,GAA0BD,IACzCrH,SAAUqH,IAEZ,cAACH,GAAD,CAAkBlH,SAAUqH,EAA5B,SACE,cAAC,EAAD,CAAgB7F,KAAMA,UC/Cf4G,GA/DoB,SAAC,GAAe,IAAbhB,EAAY,EAAZA,MAC5BiB,EAASC,cAATD,KACFE,EAAUC,cACVC,EAASC,cAHiC,EAIuBzM,cAA/DvI,EAJwC,EAIxCA,QAASmR,EAJ+B,EAI/BA,SACX9F,EAAWC,cACT2J,EAAgBC,cAAhBD,YAER5K,qBAAU,WACJrK,GACFqL,EAASG,YAAuBxL,MAEjC,CAACA,EAASqL,EAAU4J,IACvB,IAAME,EAAczB,EAChBmB,EAAQO,QAAO,SAACtH,GAAD,OAAUA,EAAK1C,OAASkF,IAASC,SAChDsE,EAAQO,QAAO,SAACtH,GAAD,OAAUA,EAAK1C,OAASkF,IAAS+E,UAK9CC,EAAY9L,uBAChB,SAAC+L,GAmBC,OAlBqDA,EAAepN,KAAI,SAAC2F,GACvE,IAIM0H,EAJqB,IAAInV,IAAUyN,EAAK2H,eAAiB,GAC5DnV,MAAM,IAAID,IAAUyN,EAAK4H,aACzBjR,IAAI,IAAIpE,IAAU,IAAIE,IAAI,KAEgBD,MAAM6L,GAE7CwJ,EAAYjC,EAAQ7I,IAAWC,IAAMD,IAAWmJ,IAClDE,EAAMa,EAAOY,GAAWrV,MAAMkV,GAC5BrH,EAAayH,YAAe9H,EAAMiH,GAMxC,OAJI5G,EAAW0H,WAAW,GAAK,IAC7B3B,EAAMA,EAAIzP,IAAI0J,IAGT,2BAAKL,GAAZ,IAAkBK,aAAY+F,WAGH/L,KAAI,SAAC2F,GAAD,OAC/B,cAAC,GAAD,CAAyBA,KAAMA,EAAMqD,SAAUA,EAAUnR,QAASA,EAAS0T,MAAOA,GAAnE5F,EAAKpM,UAGxB,CAACqT,EAAQ/U,EAASmR,EAAUuC,IAG9B,OACE,eAACoC,EAAA,EAAD,WACE,cAAC7G,EAAA,EAAD,UACE,cAAC,UAAD,CAAS8G,GAAG,KAAKnR,KAAK,KAAK4K,GAAG,OAAO2E,MAAO,CAAE6B,UAAW,UAAzD,SACGtC,EAAQ,iCAAyB,+BAGtC,cAACzE,EAAA,EAAD,UACE,cAAC,IAAD,CAAOgH,OAAK,EAACtB,KAAI,UAAKA,GAAtB,SACGW,EAAUH","file":"static/js/8.501f035f.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { getTreasury } from './addressHelpers'\r\n\r\nexport const buyBonds = async (contract, amount, cashStat, account) => {\r\n  const target = getTreasury()\r\n\r\n  const amountBig = new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()\r\n  const priceBig = new BigNumber(cashStat).times(new BigNumber(10).pow(18)).toString()\r\n  return contract.methods\r\n    .buyBonds(target, amountBig, priceBig)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const redeemBonds = async (contract, amount, cashStat, account) => {\r\n  const target = getTreasury()\r\n\r\n  const amountBig = new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()\r\n  const priceBig = new BigNumber(cashStat).times(new BigNumber(10).pow(18)).toString()\r\n  return contract.methods\r\n    .redeemBonds(target, amountBig, priceBig)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) =>\r\n  lpContract.methods.approve(masterChefContract.options.address, ethers.constants.MaxUint256).send({ from: account })\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\nexport const restake = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .stakeReward(pid)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstakeBoardroom = async (contract, amount, account) => {\r\n  return contract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const stakeBoardroom = async (contract, amount, account) => {\r\n  return contract.methods\r\n    .stake(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const swapDollar = async (contract, amount, account) => {\r\n  return contract.methods\r\n    .swapDollar(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import BigNumber from 'bignumber.js'\n\nexport const getDisplayBalance = (balance: BigNumber, decimals = 18, fractionDigits = 3) => {\n  const number = getBalance(balance, decimals - fractionDigits);\n  return (number / 10 ** fractionDigits).toFixed(fractionDigits);\n};\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getBalanceBig = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance\n}\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n\nexport function getBalance(balance: BigNumber, decimals = 18) : number {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toNumber()\n}\n\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange?: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value?: string\n  min?: number | string\n  max?: number | string\n  type?: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, startAdornment, ...rest }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput onChange={onChange} {...rest} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from 'uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {\n        depositFeeBP > 0 ?\n          <StyledMaxText>\n            Deposit Fee: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\n          </StyledMaxText>\n          :\n          null\n      }\n\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport { Button, useWalletModal } from 'uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  depositFeeBP?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', depositFeeBP = 0 }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Deposit ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        depositFeeBP={depositFeeBP}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          Cancel\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? 'Pending Confirmation' : 'Confirm'}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useDispatch } from 'react-redux'\nimport { FarmType, QuoteToken } from 'config/constants/types'\nimport { approve } from 'utils/callHelpers'\nimport BigNumber from 'bignumber.js'\nimport { getAllowance } from 'utils/erc20'\nimport { fetchFarmUserDataAsync } from '../state/farms'\nimport { useBoardroom, useMasterchef, useToken, useTreasury } from './useContract'\nimport useBlock from './useBlock'\n\nconst useApprove = (type: FarmType, lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\nexport const useAllowance = (lpContract: Contract, contract: Contract) => {\n  const [isApproved, setIsApproved] = useState(false)\n  const { account }: { account: string } = useWallet()\n  const block = useBlock()\n\n  useEffect(() => {\n    if (isApproved) return\n    getAllowance(lpContract, contract, account).then((x) => {\n      if (!account) return\n      const allowance = new BigNumber(x)\n      setIsApproved(allowance && allowance.isGreaterThan(0))\n    })\n  }, [account, contract, lpContract, block, isApproved])\n\n  return isApproved\n}\n\nexport const useApproveBoardroom = () => {\n  const { account }: { account: string } = useWallet()\n  const contract = useBoardroom()\n  const share = useToken(QuoteToken.SSO)\n  const isApproved = useAllowance(share, contract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(share, contract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, share, contract])\n\n  return { onApprove: handleApprove, isApproved }\n}\n\nexport const useApproveTreasury = (token: QuoteToken) => {\n  const { account }: { account: string } = useWallet()\n  const contract = useTreasury()\n  const tokenAddress = useToken(token)\n  const isApproved = useAllowance(tokenAddress, contract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(tokenAddress, contract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, tokenAddress, contract])\n\n  return { onApprove: handleApprove, isApproved }\n}\n\nexport default useApprove\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { Farm } from 'state/types'\nimport { stake, restake, stakeBoardroom, unstakeBoardroom } from 'utils/callHelpers'\nimport { useBoardroom, useMasterchef } from './useContract'\nimport { fetchFarmUserDataAsync } from '../state/farms'\n\nexport const useStake = ({ contractPid, type }: Farm) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      await stake(masterChefContract, contractPid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n    },\n    [account, dispatch, masterChefContract, contractPid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useStakeToBoardroom = () => {\n  const { account } = useWallet()\n  const contract = useBoardroom()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      await stakeBoardroom(contract, amount, account)\n    },\n    [account, contract],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useWithdrawFromBoardroom = () => {\n  const { account } = useWallet()\n  const contract = useBoardroom()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      await unstakeBoardroom(contract, amount, account)\n    },\n    [account, contract],\n  )\n\n  return { onWithdraw: handleStake }\n}\n\nexport const useReStake = ({ contractPid, type }: Farm) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleStake = useCallback(async () => {\n    const txHash = await restake(masterChefContract, contractPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    console.info(txHash)\n  }, [account, dispatch, masterChefContract, contractPid])\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from 'uikit'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? 'Hide' : 'Details'}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, Flex, Link, LinkExternal } from 'uikit'\nimport { QuoteToken, Swap } from 'config/constants/types'\nimport contracts from 'config/constants/contracts'\nimport { FarmWithStakedValue } from 'state/types'\n\nexport interface ExpandableSectionProps {\n  farm: FarmWithStakedValue\n}\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  text-decoration: none;\n  font-weight: normal;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  align-items: center;\n\n  svg {\n    padding-left: 4px;\n    height: 18px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst getSwapUrl = (swap: Swap) => {\n  return swap === Swap.SPOOKY ? 'https://spookyswap.finance/' : 'https://swap.spiritswap.finance/#/'\n}\n\nconst getFullSwapUrl = ({ tokenSymbol, quoteTokenSymbol, isTokenOnly, swap }: FarmWithStakedValue) => {\n  const firstPart = quoteTokenSymbol === QuoteToken.WFTM ? 'ETH' : contracts[quoteTokenSymbol][CHAIN_ID]\n\n  if (isTokenOnly) return `${getSwapUrl(swap)}swap?outputCurrency=${firstPart}`\n\n  const secondPart = contracts[tokenSymbol][CHAIN_ID]\n  return `${getSwapUrl(swap)}add/${firstPart}/${secondPart}`\n}\n\nconst getUrls = (a) => {\n  const fullUrl = getFullSwapUrl(a)\n\n  const bscScanAddress = a.isTokenOnly\n    ? `https://ftmscan.com/token/${contracts[a.tokenSymbol][CHAIN_ID]}`\n    : `https://ftmscan.com/token/${a.lpAddresses}`\n\n  return [fullUrl, bscScanAddress]\n}\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({ farm }) => {\n  const [liquidityUrlPathParts, bscScanAddress] = getUrls(farm)\n  const { userData, total, totalValue, isTokenOnly } = farm\n  const totalValueFormated = totalValue\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const balance = new BigNumber(userData?.stakedBalance).div(new BigNumber(10).pow(18))\n  const totalBalance = isTokenOnly ? new BigNumber(total) : new BigNumber(total).div(new BigNumber(10).pow(18))\n  const share = balance.div(totalBalance)\n  const liquidity = `$${Number(share.multipliedBy(totalValue)).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{farm.swap || Swap.SPIRIT}</Text>\n        <StyledLinkExternal href={liquidityUrlPathParts}>{farm.lpSymbol}</StyledLinkExternal>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>Your Liquidity:</Text>\n        <Text>{liquidity}</Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>Your Share:</Text>\n        <Text>{share.times(100).toFixed(4)}%</Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>Total Liquidity:</Text>\n        <Text>{totalValueFormated}</Text>\n      </Flex>\n      <Flex justifyContent=\"flex-start\">\n        <Link external href={bscScanAddress} bold={false}>\n          View on FtmScan\n        </Link>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading } from 'uikit'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  farmImage?: string\n  tokenSymbol?: string\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 0.25rem;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, multiplier }) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n        <Heading mb=\"4px\">{lpLabel}</Heading>\n        <Flex justifyContent=\"center\">\n          <MultiplierTag variant=\"secondary\">{multiplier || '???'}</MultiplierTag>\n        </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { Farm } from 'state/types'\nimport { unstake } from 'utils/callHelpers'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useMasterchef } from './useContract'\n\nconst useUnstake = ({ contractPid, type }: Farm) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, contractPid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, contractPid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from 'uikit'\nimport { useStake } from 'hooks/useStake'\nimport { FarmType } from 'config/constants/types'\nimport { FarmWithStakedValue } from 'state/types'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  farm: FarmWithStakedValue\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({ stakedBalance, tokenBalance, farm }) => {\n  const { onStake } = useStake(farm)\n  const { onUnstake } = useUnstake(farm)\n\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={farm.lpSymbol} depositFeeBP={farm.depositFeeBP} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={farm.lpSymbol} />,\n  )\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? (\n      <Button onClick={onPresentDeposit}>Stake</Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" />\n        </IconButton>\n        {farm.type === FarmType.SHARE && (\n          <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n            <AddIcon color=\"primary\" />\n          </IconButton>\n        )}\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { Farm } from 'state/types'\nimport { harvest } from 'utils/callHelpers'\nimport { useMasterchef } from './useContract'\nimport { fetchFarmUserDataAsync } from '../state/farms'\n\nconst useHarvest = ({ contractPid, type }: Farm) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, contractPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, contractPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvest\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from 'uikit'\nimport useHarvest from 'hooks/useHarvest'\nimport { getBalanceBig, getBalanceNumber } from 'utils/formatBalance'\nimport styled from 'styled-components'\nimport { Farm } from 'state/types'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  farm: Farm\n}\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n`\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, farm }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(farm)\n\n  const rawEarningsBalance = getBalanceBig(earnings)\n  const rawEarningsBalanceNumber = getBalanceNumber(earnings)\n  \n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawEarningsBalanceNumber === 0 ? 'textDisabled' : 'text'}>{rawEarningsBalance.toFixed(5)}</Heading>\n      <BalanceAndCompound>\n        <Button\n          disabled={rawEarningsBalanceNumber === 0 || pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)\n          }}\n        >\n          Harvest\n        </Button>\n      </BalanceAndCompound>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import React, { useMemo, useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { provider } from 'web3-core'\nimport { getContract } from 'utils/erc20'\nimport { Button, Flex, Text } from 'uikit'\nimport { FarmWithStakedValue } from 'state/types'\nimport contracts from 'config/constants/contracts'\nimport { useFarmUser } from 'state/hooks'\nimport { FarmType } from 'config/constants/types'\nimport UnlockButton from 'components/UnlockButton'\nimport useApprove from 'hooks/useApprove'\nimport Countdown, { CountdownRenderProps } from 'react-countdown'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 19px auto;\n  width: 100%;\n`\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  ethereum?: provider\n  account?: string\n  earnToken?: string\n}\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, ethereum, account, earnToken }) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(farm.pid)\n  const lpAddress = farm.lpAddresses\n  const tokenAddress = contracts[farm.tokenSymbol][CHAIN_ID]\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpContract = useMemo(() => getContract(ethereum as provider, farm.isTokenOnly ? tokenAddress : lpAddress), [\n    ethereum,\n    lpAddress,\n    tokenAddress,\n    farm.isTokenOnly,\n  ])\n\n  const { onApprove } = useApprove(farm.type, lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction stakedBalance={stakedBalance} tokenBalance={tokenBalance} farm={farm} />\n    ) : (\n      farm.type === FarmType.SHARE && (\n        <>\n          <Button mt=\"8px\" fullWidth disabled={requestedApproval} onClick={handleApprove}>\n            Approve Contract\n          </Button>\n          <Divider />\n        </>\n      )\n    )\n  }\n\n  const renderer = (countdownProps: CountdownRenderProps) => {\n    const { days, hours, minutes, seconds } = countdownProps\n    const paddedSeconds = seconds < 10 ? `0${seconds}` : seconds\n    const paddedMinutes = minutes < 10 ? `0${minutes}` : minutes\n    const paddedHours = hours < 10 ? `0${hours}` : hours\n    const paddedDays = days > 0 ? `${days} days and ` : ''\n\n    return (\n      <>\n        <Divider />\n        <Text pr=\"3px\">\n          {farm.lpSymbol} pool starts: {paddedDays}\n          {paddedHours}:{paddedMinutes}:{paddedSeconds}\n        </Text>\n        <Text pr=\"3px\">You can deposit but you will not get any rewards yet.</Text>\n        <Divider />\n      </>\n    )\n  }\n  \n  let { startTime } = farm\n  if (!startTime) startTime = 0\n  const poolActive = startTime * 1000 - Date.now() <= 0\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {earnToken}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          Earned\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} farm={farm} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          Staked\n        </Text>\n      </Flex>\n      {!poolActive && <Countdown date={new Date(startTime * 1000)} renderer={renderer} />}\n      {!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from 'uikit'\nimport { FarmWithStakedValue } from 'state/types'\nimport { FarmType, QuoteToken } from 'config/constants/types'\nimport { provider } from 'web3-core'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\n\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 16px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n  min-height: 476px;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  ethereum?: provider\n  account?: string\n  isSSO: boolean\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, ethereum, account, isSSO }) => {\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const farmImage = farm.isTokenOnly\n    ? farm.tokenSymbol.toLowerCase()\n    : `${farm.tokenSymbol.toLowerCase()}-${farm.quoteTokenSymbol.toLowerCase()}`\n\n  const earnLabel = isSSO ? QuoteToken.SSO : QuoteToken.SDO\n\n  const farmAPY = farm.apy && farm.apy.times(new BigNumber(100)).toNumber()\n\n  return (\n    <FCard>\n      {farm.tokenSymbol === earnLabel && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={farm.lpSymbol}\n        multiplier={farm.multiplier}\n        farmImage={farmImage}\n        tokenSymbol={farm.tokenSymbol}\n      />\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Text>APR:</Text>\n        <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n          {farm.apy && !Number.isNaN(farmAPY) ? (\n            <>\n              {farmAPY.toLocaleString(undefined, {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              })}\n              %\n            </>\n          ) : (\n            <Skeleton height={24} width={80} />\n          )}\n        </Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>Earn:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      {farm.type === FarmType.SHARE && (\n        <Flex justifyContent=\"space-between\">\n          <Text style={{ fontSize: '20px' }}>Deposit Fee:</Text>\n          <Text bold style={{ fontSize: '20px' }}>\n            {farm.depositFeeBP ? `${farm.depositFeeBP / 100}%` : <Skeleton height={24} width={80} />}\n          </Text>\n        </Flex>\n      )}\n      <CardActionsContainer farm={farm} ethereum={ethereum} account={account} earnToken={earnLabel} />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection farm={farm} />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import React, { useEffect, useCallback } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Heading } from 'uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport { Farm, FarmWithStakedValue } from 'state/types'\nimport Page from 'components/layout/Page'\nimport { calculateTotal, useFarms, usePrices } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { FarmType, QuoteToken } from 'config/constants/types'\nimport FarmCard from './components/FarmCard/FarmCard'\nimport { fetchFarmUserDataAsync } from '../../state/farms'\n\ninterface FarmProps {\n  isSSO: boolean\n}\n\nconst Farms: React.FC<FarmProps> = ({ isSSO }) => {\n  const { path } = useRouteMatch()\n  const farmsLP = useFarms()\n  const prices = usePrices()\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n  const activeFarms = isSSO\n    ? farmsLP.filter((farm) => farm.type === FarmType.SHARE)\n    : farmsLP.filter((farm) => farm.type === FarmType.DOLLAR)\n\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay) => {\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm: Farm) => {\n        const cakeRewardPerBlock = new BigNumber(farm.tokenPerBLock || 1)\n          .times(new BigNumber(farm.poolWeight))\n          .div(new BigNumber(10).pow(18))\n\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n        // eslint-disable-next-line no-nested-ternary\n        const baseToken = isSSO ? QuoteToken.SSO : QuoteToken.SDO\n        let apy = prices[baseToken].times(cakeRewardPerYear)\n        const totalValue = calculateTotal(farm, prices)\n\n        if (totalValue.comparedTo(0) > 0) {\n          apy = apy.div(totalValue)\n        }\n\n        return { ...farm, totalValue, apy }\n      })\n\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard key={farm.pid} farm={farm} ethereum={ethereum} account={account} isSSO={isSSO} />\n      ))\n    },\n    [prices, account, ethereum, isSSO],\n  )\n\n  return (\n    <Page>\n      <FlexLayout>\n        <Heading as=\"h1\" size=\"lg\" mb=\"50px\" style={{ textAlign: 'center' }}>\n          {isSSO ? '🏦 Pick a Share Bank' : '🏧 Pick a Bank'}\n        </Heading>\n      </FlexLayout>\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          {farmsList(activeFarms)}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nexport default Farms\n"],"sourceRoot":""}